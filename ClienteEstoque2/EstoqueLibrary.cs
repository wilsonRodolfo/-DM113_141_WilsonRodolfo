//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteEstoque2.ServicoEstoque2
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://projetoavaliativo.dm113/02", ConfigurationName="ClienteEstoque2.ServicoEstoque2.IServicoEstoque")]
    public interface IServicoEstoque
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/adicionarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/adicionarEstoqueResponse")]
        bool adicionarEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/adicionarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/adicionarEstoqueResponse")]
        System.Threading.Tasks.Task<bool> adicionarEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/removerEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/removerEstoqueResponse")]
        bool removerEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/removerEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/removerEstoqueResponse")]
        System.Threading.Tasks.Task<bool> removerEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/consultarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/consultarEstoqueResponse")]
        int consultarEstoque(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/consultarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/consultarEstoqueResponse")]
        System.Threading.Tasks.Task<int> consultarEstoqueAsync(string numeroProduto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoEstoqueChannel : ClienteEstoque2.ServicoEstoque2.IServicoEstoque, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoEstoqueClient : System.ServiceModel.ClientBase<ClienteEstoque2.ServicoEstoque2.IServicoEstoque>, ClienteEstoque2.ServicoEstoque2.IServicoEstoque
    {
        
        public ServicoEstoqueClient()
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool adicionarEstoque(string numeroProduto, int quantidade)
        {
            return base.Channel.adicionarEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> adicionarEstoqueAsync(string numeroProduto, int quantidade)
        {
            return base.Channel.adicionarEstoqueAsync(numeroProduto, quantidade);
        }
        
        public bool removerEstoque(string numeroProduto, int quantidade)
        {
            return base.Channel.removerEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> removerEstoqueAsync(string numeroProduto, int quantidade)
        {
            return base.Channel.removerEstoqueAsync(numeroProduto, quantidade);
        }
        
        public int consultarEstoque(string numeroProduto)
        {
            return base.Channel.consultarEstoque(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<int> consultarEstoqueAsync(string numeroProduto)
        {
            return base.Channel.consultarEstoqueAsync(numeroProduto);
        }
    }
}
