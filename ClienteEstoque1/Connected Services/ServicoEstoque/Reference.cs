//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteEstoque1.ServicoEstoque {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://projetoavaliativo.dm113/01", ConfigurationName="ServicoEstoque.IServicoEstoque")]
    public interface IServicoEstoque {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/ListarProdutos", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/ListarProdutosResponse")]
        string[] ListarProdutos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/ListarProdutos", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/ListarProdutosResponse")]
        System.Threading.Tasks.Task<string[]> ListarProdutosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/incluirProduto", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/incluirProdutoResponse")]
        bool incluirProduto(EstoqueLibrary.Produto produto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/incluirProduto", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/incluirProdutoResponse")]
        System.Threading.Tasks.Task<bool> incluirProdutoAsync(EstoqueLibrary.Produto produto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/removerProduto", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/removerProdutoResponse")]
        bool removerProduto(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/removerProduto", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/removerProdutoResponse")]
        System.Threading.Tasks.Task<bool> removerProdutoAsync(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/consultarEstoque", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/consultarEstoqueResponse")]
        int consultarEstoque(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/consultarEstoque", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/consultarEstoqueResponse")]
        System.Threading.Tasks.Task<int> consultarEstoqueAsync(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/adicionarEstoque", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/adicionarEstoqueResponse")]
        bool adicionarEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/adicionarEstoque", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/adicionarEstoqueResponse")]
        System.Threading.Tasks.Task<bool> adicionarEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/removerEstoque", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/removerEstoqueResponse")]
        bool removerEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/removerEstoque", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/removerEstoqueResponse")]
        System.Threading.Tasks.Task<bool> removerEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/verProduto", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/verProdutoResponse")]
        EstoqueLibrary.Produto verProduto(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/01/IServicoEstoque/verProduto", ReplyAction="http://projetoavaliativo.dm113/01/IServicoEstoque/verProdutoResponse")]
        System.Threading.Tasks.Task<EstoqueLibrary.Produto> verProdutoAsync(string numeroProduto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoEstoqueChannel : ClienteEstoque1.ServicoEstoque.IServicoEstoque, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoEstoqueClient : System.ServiceModel.ClientBase<ClienteEstoque1.ServicoEstoque.IServicoEstoque>, ClienteEstoque1.ServicoEstoque.IServicoEstoque {
        
        public ServicoEstoqueClient() {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoEstoqueClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] ListarProdutos() {
            return base.Channel.ListarProdutos();
        }
        
        public System.Threading.Tasks.Task<string[]> ListarProdutosAsync() {
            return base.Channel.ListarProdutosAsync();
        }
        
        public bool incluirProduto(EstoqueLibrary.Produto produto) {
            return base.Channel.incluirProduto(produto);
        }
        
        public System.Threading.Tasks.Task<bool> incluirProdutoAsync(EstoqueLibrary.Produto produto) {
            return base.Channel.incluirProdutoAsync(produto);
        }
        
        public bool removerProduto(string numeroProduto) {
            return base.Channel.removerProduto(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<bool> removerProdutoAsync(string numeroProduto) {
            return base.Channel.removerProdutoAsync(numeroProduto);
        }
        
        public int consultarEstoque(string numeroProduto) {
            return base.Channel.consultarEstoque(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<int> consultarEstoqueAsync(string numeroProduto) {
            return base.Channel.consultarEstoqueAsync(numeroProduto);
        }
        
        public bool adicionarEstoque(string numeroProduto, int quantidade) {
            return base.Channel.adicionarEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> adicionarEstoqueAsync(string numeroProduto, int quantidade) {
            return base.Channel.adicionarEstoqueAsync(numeroProduto, quantidade);
        }
        
        public bool removerEstoque(string numeroProduto, int quantidade) {
            return base.Channel.removerEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> removerEstoqueAsync(string numeroProduto, int quantidade) {
            return base.Channel.removerEstoqueAsync(numeroProduto, quantidade);
        }
        
        public EstoqueLibrary.Produto verProduto(string numeroProduto) {
            return base.Channel.verProduto(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<EstoqueLibrary.Produto> verProdutoAsync(string numeroProduto) {
            return base.Channel.verProdutoAsync(numeroProduto);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="IServicoEstoque", Namespace="http://projetoavaliativo.dm113/02", ConfigurationName="ServicoEstoque.IServicoEstoque1")]
    public interface IServicoEstoque1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/adicionarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/adicionarEstoqueResponse")]
        bool adicionarEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/adicionarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/adicionarEstoqueResponse")]
        System.Threading.Tasks.Task<bool> adicionarEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/removerEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/removerEstoqueResponse")]
        bool removerEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/removerEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/removerEstoqueResponse")]
        System.Threading.Tasks.Task<bool> removerEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/consultarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/consultarEstoqueResponse")]
        int consultarEstoque(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/consultarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/consultarEstoqueResponse")]
        System.Threading.Tasks.Task<int> consultarEstoqueAsync(string numeroProduto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoEstoque1Channel : ClienteEstoque1.ServicoEstoque.IServicoEstoque1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoEstoque1Client : System.ServiceModel.ClientBase<ClienteEstoque1.ServicoEstoque.IServicoEstoque1>, ClienteEstoque1.ServicoEstoque.IServicoEstoque1 {
        
        public ServicoEstoque1Client() {
        }
        
        public ServicoEstoque1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicoEstoque1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoEstoque1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoEstoque1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool adicionarEstoque(string numeroProduto, int quantidade) {
            return base.Channel.adicionarEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> adicionarEstoqueAsync(string numeroProduto, int quantidade) {
            return base.Channel.adicionarEstoqueAsync(numeroProduto, quantidade);
        }
        
        public bool removerEstoque(string numeroProduto, int quantidade) {
            return base.Channel.removerEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> removerEstoqueAsync(string numeroProduto, int quantidade) {
            return base.Channel.removerEstoqueAsync(numeroProduto, quantidade);
        }
        
        public int consultarEstoque(string numeroProduto) {
            return base.Channel.consultarEstoque(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<int> consultarEstoqueAsync(string numeroProduto) {
            return base.Channel.consultarEstoqueAsync(numeroProduto);
        }
    }
}
